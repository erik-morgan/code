' Class Module RegEx

' Member variable
' Private dBalance As Double
' Properties
' Property Get Balance() As Double
'     Balance = dBalance
' End Property
' Property Let Balance(dValue As Double)
'     dBalance = dValue
' End Property
' Event - triggered when class created
' Private Sub Class_Initialize()
'     dBalance = 100
' End Sub
' Methods
' Public Sub Withdraw(dAmount As Double)
'     dBalance = dBalance - dAmount
' End Sub
' Public Sub Deposit(dAmount As Double)
'     dBalance = dBalance + dAmount
' End Sub

Private regx As Object, patterns As Object
Private Sub Class_Initialize()
    Set patterns = CreateObject(Scripting.Dictionary)
    patterns.Item(1) = "^[-A-Z0-9]{6,}$"
    Set regx = CreateObject("VBScript.RegExp")
    regx.Global = True
    regx.MultiLine = False
End Sub
Public Sub Test(text As String, pat As Integer, case As Integer) As Boolean
    
End Sub
Private Sub SetOptions(pat As Integer, case As Integer)
    
End Sub
