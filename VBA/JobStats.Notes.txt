Dim response As DOMDocument60
Dim http As XMLHTTP60
Dim node As IXMLDOMNode
Dim nodes As IXMLDOMNodeList
Set http = New XMLHTTP60

http.Open "GET", "https://maps.googleapis.com/maps/api/directions/xml?origin=" & URLEncode(SourceAddress) & "&destination=" & URLEncode(DestinationAddress), False
http.send
Set response = http.responseXML

Set node = response.SelectSingleNode("/DirectionsResponse/status")
If node.nodeTypedValue <> "OK" Then...
Set nodes = response.SelectNodes("/DirectionsResponse/route")
Set node = response.SelectSingleNode("/DirectionsResponse/route/leg/duration/value")
If node Is Not Null Then...

Set http = Nothing
Set response = Nothing

Code For "TOP CONNECTOR" Column:
    regx.Pattern = "\b(10|15K)[,0IKPS]+ ?(STD.{0,2}|STUDDED)? ?(FLG|FLANGE)"
    If regx.Test(partDesc) Then
        Set matches = regx.Execute(partDesc)(0).SubMatches
        partDict.Item("CONN") = matches(0) & IIf(matches(1), "K STUDDED FLANGE", "K FLANGE")
    Else
        If InStr(partDesc, hubPattern) Then
            partDict.Item("CONN") = "HUB TEXT"
        Else
            Dim html As Object
            http.Open "GET", partURL & Left(partDict("PART"), Len(partDict("PART"))-3), False
            http.send
            Set html = CreateObject("MSHTML2.HTMLDocument")
            html.body = http.responseText
            Set matches = regx.Execute(html.getElementById("Description"))(0).SubMatches
            partDict.Item("CONN") = matches(0) & IIf(matches(1), "K STUDDED FLANGE", "K FLANGE")
        End If
    End If

Function XDOM(urlnum As Integer, idnum As String)
    Dim url As String, http As Object, xml As Object
    url = Switch(urlnum=0, specURL, urlnum=1, partURL, urlnum=2, workURL, urlnum=3, salesURL) & idnum
    Set http = CreateObject("MSXML2.XMLHTTP60") ' OR MSXML2.XMLHTTP.6.0
    http.Open "GET", url, False
    http.send
    regx.Pattern = "<(meta|input|br|col|hr|img|link)\b(.*?)>"
    Set xml = CreateObject("MSXML2.DOMDocument")
    xml.async = False: xml.validateOnParse = False
    xml.LoadXML (regx.Replace(http.responseText, "<$1$2 />"))
    Set XDOM = xml.DocumentElement
    http = Nothing
    xml = Nothing
End Function


Function regx(ByRef rx As String)
    Dim rxKey As String
    If Not regexCache.Exists(rx) Then
        Dim regExp As Object
        Set regExp = CreateObject("VBScript.RegExp")
        regExp.Global = True
        regExp.Pattern = rx
        Set regexCache(rx) = regExp
    End If
    Set regx = regexCache(rx)
End Function
