' JobStats Array = 0=JOB 1=PART 2=DBEG 3=DEND 4=SO 5=CUST 6=REF 7=TYPE 8=SIZE 9=PSI 10=MAN 11=GSKT 12=CERT
' Useful Info: Full Lists of Mandrels and Gaskets
'              Are SDX Always 30" (Ref 2-606709-02)? Yes
'              Can H4 Be 30" (Ref 2-608267-03)? Yes
'              DX-1 Gasket vs DX (Ref 2-606646-02)?
'              Is Gasket Either VX/VT OR DX (No Others)? Yes
' ws.UsedRange.Copy Destination:=Sheets("DATA-EDIT").Range("A1")

Public ws As Worksheet
Public data As Object
Public jobs As Object
Public regexps As Object
Public Const specURL As String = "http://houston/ErpWeb/WorkOrdersForPart.aspx?PartNumber="
Public Const partURL As String = "http://houston/ErpWeb/PartDetails.aspx?PartNumber="
Public Const workURL As String = "http://houston/ErpWeb/WODetail.aspx?OrderNumber="
Public Const salesURL As String = "http://houston/ErpSalesWeb/SalesOrder.aspx?OrderNum="

Sub Init()
    Dim preData() As Variant, i As Integer
    Application.ScreenUpdating = False
    Set ws = Sheets("DATA")
    Set data = CreateObject("Scripting.Dictionary")
    Set jobs = CreateObject("Scripting.Dictionary")
    i = ws.Cells(ws.rows.Count, 1).End(xlUp).row
    If (i - 1) Then
        preData = ws.Range("A2").Resize(i - 1, 13).Value2
        For i = LBound(preData) To UBound(preData)
            data(preData(i, 1)) = Application.Index(preData, i, 0)
        Next i
    End If
    Set regexps = CreateObject("Scripting.Dictionary")
    InitRegx "DATE", "\b(\d)\b"
    InitRegx "DESC", "(.)""| ?([-/]) ?"
    InitRegx "PSI", "\b(10|1?5)(?=,000|K)\b"
    InitRegx "MAN", "(CAMERON HUB|RBC)[^,]+(?:DOWN|PROFILE|LATCH)"
    InitRegx "H4", "\b(S?HD.?)?H-?4(.HD.?)?\b"
    InitRegx "DX", "\b(S?DX)\b[^-,]+(LATCH|PROFILE)"
    InitRegx "VX", "\b(VX(?:.VT)?)\b"
    InitRegx "ABS", "\bABS\b"
    Main
End Sub

Sub Main()
    Dim partNums() As Variant, i As Integer, rows() As Variant
    i = Sheets("PARTS").Cells(Sheets("PARTS").rows.Count, 1).End(xlUp).row
    If i Then
        partNums = Application.WorksheetFunction.Transpose(Sheets("PARTS").Range("A1:A" & i).Value2)
    Else
        MsgBox "Requires that the Worksheet 'PARTS' has at least 1 part number in column A"
        Exit Sub
    End If
    For i = LBound(partNums) To UBound(partNums)
        If Right(Trim(partNums(i)), 9) Like "######-##" Then
            ProcessPart CStr(Trim(partNums(i)))
        End If
    Next i
    rows = jobs.Items
    For i = 0 To UBound(rows)
        ws.Range("A" & (i + 2) & ":M" & (i + 2)).Value2 = rows(i)
    Next i
    Application.ScreenUpdating = True
    MsgBox "Data Updated Successfully!"
End Sub

Sub ProcessPart(ByRef partNum As String)
    Dim props(12) As String, desc As String, txt As String, workOrders() As String, w As Integer
    Dim doc As Object, matches As Object
    Set doc = DOM(0, partNum)
    props(1) = partNum
    desc = regexps("DESC").Replace(doc.getElementById("Description").innerText, "$1$2")
    If InStr(desc, "DX-DW") Then
        props(7) = "DX-DW"
        props(9) = "15,000 PSI"
    Else
        Set matches = regexps("PSI").Execute(desc)
        props(7) = "DX-" & matches(0)
        props(9) = matches(0) & ",000 PSI"
    End If
    props(8) = Left(desc, 5)
    txt = Switch(desc Like "16*", "25-3/4"" ", _
                 desc Like "*[/ ]30*", "30"" ", _
                 desc Like "*", "27"" ")
    Set matches = regexps("MAN").Execute(desc)
    If matches.Count Then
        props(10) = txt & matches(0).SubMatches(0)
    Else
        Set matches = regexps("H4").Execute(desc)
        If matches.Count Then
            props(10) = txt & matches(0)
        Else
            props(10) = txt & regexps("DX").Execute(desc)(0).SubMatches(0)
        End If
    End If
    Set matches = regexps("VX").Execute(desc)
    If matches.Count Then
        props(11) = matches(0)
    Else
        props(11) = "DX"
    End If
    workOrders = Split(doc.getElementsByTagName("table")(3).innerText, Chr(10))
    Set matches = Nothing
    Set doc = Nothing
    For w = 11 To UBound(workOrders)
        txt = Mid(workOrders(w), 2, 8)
        ProcessJob txt, props
    Next w
End Sub

Sub ProcessJob(ByRef jobNum As String, ByVal job As Variant)
    Dim doc As Object, txt As String
    If data.Exists(jobNum) Then
        jobs(jobNum) = data(jobNum)
    End If
    Set doc = DOM(2, jobNum)
    job(0) = jobNum
    job(2) = regexps("DATE").Replace(doc.getElementById("StartDate").innerText, "0$1")
    txt = Split(doc.getElementsByTagName("table")(4).innerText, "MFG-STK")(1)
    job(3) = regexps("DATE").Replace(Left(txt, InStr(txt, " ") - 1), "0$1")
    txt = doc.getElementById("OrderReference").innerText
    job(4) = Mid(txt, IIf(txt Like "[A-Z]*", 2, 1), 7)
    Set doc = DOM(3, CStr(job(4)))
    job(5) = doc.getElementById("OrderHeader_SoldToWeb").FirstChild.toString()
    job(6) = doc.getElementById("OrderHeader_CustomerReference").innerText
    txt = doc.body.innerText
    If regexps("ABS").Test(txt) Then
        job(12) = IIf(InStr(txt, "DNV"), "ABS/DNV", "ABS")
    Else
        job(12) = IIf(InStr(txt, "DNV"), "DNV", "N/A")
    End If
    jobs(jobNum) = job
    Set doc = Nothing
End Sub

Function DOM(ByRef urlnum As Integer, ByRef idnum As String)
    Dim url As String, http As Object, html As Object, tries As Integer
    url = Switch(urlnum = 0, specURL, _
                 urlnum = 1, partURL, _
                 urlnum = 2, workURL, _
                 urlnum = 3, salesURL) & idnum
    Set http = CreateObject("MSXML2.XMLHTTP.6.0")
    For tries = 1 To 5
        http.Open "GET", url, False
        http.send
        If http.Status = 200 Then
            Set html = CreateObject("htmlfile")
            html.body.innerHTML = http.responseText
            Set DOM = html
            Exit For
        End If
    Next tries
    Set http = Nothing
    Set html = Nothing
End Function

Sub InitRegx(ByRef rxkey As String, ByRef rxpat As String)
    Dim rx As Object
    Set rx = CreateObject("VBScript.RegExp")
    rx.Global = True
    rx.Pattern = rxpat
    Set regexps(rxkey) = rx
    Set rx = Nothing
End Sub



